DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS articles CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS roles;
DROP TABLE IF EXISTS articles_categories;
DROP TABLE IF EXISTS comments;

CREATE TABLE roles(
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  title VARCHAR(50) NOT NULL
);

CREATE TABLE users(
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  avatar VARCHAR(50) NOT NULL,
  password VARCHAR(255) NOT NULL,
  role_id INTEGER NOT NULL,

  FOREIGN KEY (role_id) REFERENCES roles (id)
    ON DELETE SET NULL
    ON UPDATE SET NULL
);

CREATE TABLE articles(
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  title VARCHAR(100) NOT NULL,
  image VARCHAR(50),
  announce TEXT NOT NULL,
  full_text TEXT NOT NULL,
  published_at DATE NOT NULL,
  user_id INTEGER NOT NULL,
  created_at TIMESTAMP DEFAULT current_timestamp,

  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE categories(
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  title VARCHAR(100) NOT NULL
);

CREATE TABLE articles_categories(
  article_id INTEGER NOT NULL,
  category_id INTEGER NOT NULL,

  CONSTRAINT articles_categories_pk PRIMARY KEY (article_id, category_id),
  FOREIGN KEY (article_id) REFERENCES articles (id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
  FOREIGN KEY (category_id) REFERENCES categories (id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TABLE comments(
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  text TEXT NOT NULL,
  user_id INTEGER NOT NULL,
  article_id INTEGER NOT NULL,
  created_at TIMESTAMP DEFAULT current_timestamp,

  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (article_id) REFERENCES articles (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
